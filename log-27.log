====================
Type='ASSIGN_FIELD_NULLABLE', message='assigning @Nullable expression to @NonNull field'
/home/nima/Developer/nullness-benchmarks/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/netty/SslServerCustomizer.java:76
		this.ssl = ssl;
Log:
---NullAway.lambda$resolveRemainingErrors$17---
==============================
---NullAway.lambda$resolveRemainingErrors$17---
TOP LEVEL CALL TO FIX ERROR: Type='ASSIGN_FIELD_NULLABLE', message='assigning @Nullable expression to @NonNull field'
/home/nima/Developer/nullness-benchmarks/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/netty/SslServerCustomizer.java:76
		this.ssl = ssl;
---ChatGPT.ask---
Asking ChatGPT:
I want to resolve a warning reported by NullAway.
The error is of the type of "ASSIGN_FIELD_NULLABLE" and the full error message is: "assigning @Nullable expression to @NonNull field".
The line with the error is: "		this.ssl = ssl;".

The error is within "the method: SslServerCustomizer(org.springframework.boot.web.server.Ssl,org.springframework.boot.web.server.Http2,org.springframework.boot.web.server.SslStoreProvider)" and the code surrounding the error is:
```java
 * instance.
 *
 * @author Brian Clozel
 * @author Raheela Aslam
 * @author Chris Bono
 * @since 2.0.0
 * @deprecated this class is meant for Spring Boot internal use only.
 */
@Deprecated(since = "2.0.0", forRemoval = false)
public class SslServerCustomizer implements NettyServerCustomizer {

	private final Ssl ssl;

	@Nullable
	private final Http2 http2;

	@Nullable
	private final SslStoreProvider sslStoreProvider;

	public SslServerCustomizer(@Nullable Ssl ssl, @Nullable Http2 http2, @Nullable SslStoreProvider sslStoreProvider) {
		this.ssl = ssl;
		this.http2 = http2;
		this.sslStoreProvider = sslStoreProvider;
	}

	@Override
	public HttpServer apply(HttpServer server) {
		AbstractProtocolSslContextSpec<?> sslContextSpec = createSslContextSpec();
		return server.secure((spec) -> spec.sslContext(sslContextSpec));
	}

	protected AbstractProtocolSslContextSpec<?> createSslContextSpec() {
		AbstractProtocolSslContextSpec<?> sslContextSpec;
		if (this.http2 != null && this.http2.isEnabled()) {
			sslContextSpec = Http2SslContextSpec.forServer(getKeyManagerFactory(this.ssl, this.sslStoreProvider));
		}
		else {
			sslContextSpec = Http11SslContextSpec.forServer(getKeyManagerFactory(this.ssl, this.sslStoreProvider));
		}
		sslContextSpec.configure((builder) -> {
```

Give me the fixed code snippet (ONLY THE METHOD REWRITE OF "SslServerCustomizer(org.springframework.boot.web.server.Ssl,org.springframework.boot.web.server.Http2,org.springframework.boot.web.server.SslStoreProvider)") in XML format in <response> tag like the example below. I will apply the fix to my codebase.
Do not import any additional libraries or classes or java comments.
If you can provide the fixed code snippet, provide it in the following format and place the code snippet in the <code> tag within ```java block.
<response>
  <success>true</success>
  <code><![CDATA[
  ```java
  Your fixed code snippet here
  ```
    ]]>
  </code>
</response>

---ChatGPT.sendRequestToOpenAI---
Sending request to OpenAI...
---ChatGPT.sendRequestToOpenAI---
Response received from OpenAI.
---Response.<init>---
Creating Response:
```xml
<response>
  <success>true</success>
  <code><![CDATA[
  ```java
  public SslServerCustomizer(@NonNull Ssl ssl, Http2 http2, SslStoreProvider sslStoreProvider) {
      this.ssl = ssl;
      this.http2 = http2;
      this.sslStoreProvider = sslStoreProvider;
  }
  ```
    ]]>
  </code>
</response>
```
---Response.<init>---
Response created:
public SslServerCustomizer(@NonNull Ssl ssl, Http2 http2, SslStoreProvider sslStoreProvider) {
      this.ssl = ssl;
      this.http2 = http2;
      this.sslStoreProvider = sslStoreProvider;
  }
