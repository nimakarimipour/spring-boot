====================
Type='DEREFERENCE_NULLABLE', message='dereferenced expression logger is @Nullable'
/home/nima/Developer/nullness-benchmarks/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/logging/log4j2/Log4J2LoggingSystem.java:380
			logger.setLevel(null);
Log:
15:36:57.910 TRACE edu.ucr.cs.riple.core.checkers.nullaway.NullAway.lambda$resolveRemainingErrors$19
==============================
15:36:57.910 TRACE edu.ucr.cs.riple.core.checkers.nullaway.NullAway.lambda$resolveRemainingErrors$19
CHATGPT.COUNT = 1
15:36:57.910 TRACE edu.ucr.cs.riple.core.checkers.nullaway.NullAway.lambda$resolveRemainingErrors$19
CHATGPT.PROMPTS SIZE = 1
15:36:57.910 TRACE edu.ucr.cs.riple.core.checkers.nullaway.NullAway.lambda$resolveRemainingErrors$19
Both set to 0 and cleared 0
15:36:57.910 TRACE edu.ucr.cs.riple.core.checkers.nullaway.NullAway.lambda$resolveRemainingErrors$19
3 : TOP LEVEL CALL TO FIX ERROR: Type='DEREFERENCE_NULLABLE', message='dereferenced expression logger is @Nullable'
/home/nima/Developer/nullness-benchmarks/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/logging/log4j2/Log4J2LoggingSystem.java:380
			logger.setLevel(null);
15:37:06.555 TRACE edu.ucr.cs.riple.core.checkers.nullaway.codefix.ChatGPT.ask
Asking ChatGPT:
I want to resolve a warning reported by NullAway.
The error is of the type of "DEREFERENCE_NULLABLE" and the full error message is: "dereferenced expression logger is @Nullable".
The line with the error is: "			logger.setLevel(null);".

The error is within "the method: clearLogLevel(java.lang.String,org.apache.logging.log4j.core.config.LoggerConfig)" and the code surrounding the error is:
```java
	public void setLogLevel(@Nullable String loggerName, LogLevel logLevel) {
		setLogLevel(loggerName, LEVELS.convertSystemToNative(logLevel));
	}

	private void setLogLevel(@Nullable String loggerName, @Nullable Level level) {
		LoggerConfig logger = getLogger(loggerName);
		if (level == null) {
			clearLogLevel(loggerName, logger);
		}
		else {
			setLogLevel(loggerName, logger, level);
		}
		getLoggerContext().updateLoggers();
	}

	private void clearLogLevel(@Nullable String loggerName, @Nullable LoggerConfig logger) {
		if (logger instanceof LevelSetLoggerConfig) {
			getLoggerContext().getConfiguration().removeLogger(loggerName);
		}
		else {
			logger.setLevel(null);
		}
	}

	private void setLogLevel(@Nullable String loggerName, @Nullable LoggerConfig logger, Level level) {
		if (logger == null) {
			getLoggerContext().getConfiguration().addLogger(loggerName,
					new LevelSetLoggerConfig(loggerName, level, true));
		}
		else {
			logger.setLevel(level);
		}
	}

	@Override
	public List<LoggerConfiguration> getLoggerConfigurations() {
		List<LoggerConfiguration> result = new ArrayList<>();
		getAllLoggers().forEach((name, loggerConfig) -> result.add(convertLoggerConfig(name, loggerConfig)));
		result.sort(CONFIGURATION_COMPARATOR);
		return result;
```

Give me the fixed code snippet (ONLY THE METHOD REWRITE OF "clearLogLevel(java.lang.String,org.apache.logging.log4j.core.config.LoggerConfig)") in XML format in <response> tag like the example below. I will apply the fix to my codebase.
Do not import any additional libraries or classes or java comments.
If you can provide the fixed code snippet, provide it in the following format and place the code snippet in the <code> tag within ```java block.
<response>
  <success>true</success>
  <code><![CDATA[
  ```java
  Your fixed code snippet here
  ```
    ]]>
  </code>
</response>

15:37:06.556 TRACE edu.ucr.cs.riple.core.checkers.nullaway.codefix.ChatGPT.ask
Retrieving response from cache
15:37:06.556 TRACE edu.ucr.cs.riple.core.checkers.nullaway.codefix.Response.tryCreate
Trying to create Response:
Sure, here is the fixed code snippet:

```xml
<response>
  <success>true</success>
  <code><![CDATA[
  ```java
  private void clearLogLevel(String loggerName, LoggerConfig logger) {
      if (logger == null) {
          return;
      }
      if (logger instanceof LevelSetLoggerConfig) {
          getLoggerContext().getConfiguration().removeLogger(loggerName);
      } else {
          logger.setLevel(null);
      }
  }
  ```
    ]]>
  </code>
</response>
```
15:37:06.558 TRACE edu.ucr.cs.riple.core.checkers.nullaway.codefix.Response.<init>
Creating Response:
Sure, here is the fixed code snippet:

```xml
<response>
  <success>true</success>
  <code><![CDATA[
  ```java
  private void clearLogLevel(String loggerName, LoggerConfig logger) {
      if (logger == null) {
          return;
      }
      if (logger instanceof LevelSetLoggerConfig) {
          getLoggerContext().getConfiguration().removeLogger(loggerName);
      } else {
          logger.setLevel(null);
      }
  }
  ```
    ]]>
  </code>
</response>
```
15:37:06.561 TRACE edu.ucr.cs.riple.core.checkers.nullaway.codefix.Response.<init>
Response created:
private void clearLogLevel(String loggerName, LoggerConfig logger) {
      if (logger == null) {
          return;
      }
      if (logger instanceof LevelSetLoggerConfig) {
          getLoggerContext().getConfiguration().removeLogger(loggerName);
      } else {
          logger.setLevel(null);
      }
  }
