====================
Type='RETURN_NULLABLE', message='returning @Nullable expression from method with @NonNull return type'
/home/nima/Developer/nullness-benchmarks/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/ConfigurationPropertyName.java:590
		return (elements != null) ? new ConfigurationPropertyName(elements) : null;
Log:
---NullAway.lambda$resolveRemainingErrors$17---
==============================
---NullAway.lambda$resolveRemainingErrors$17---
TOP LEVEL CALL TO FIX ERROR: Type='RETURN_NULLABLE', message='returning @Nullable expression from method with @NonNull return type'
/home/nima/Developer/nullness-benchmarks/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/ConfigurationPropertyName.java:590
		return (elements != null) ? new ConfigurationPropertyName(elements) : null;
---ChatGPT.ask---
Asking ChatGPT:
I want to resolve a warning reported by NullAway.
The error is of the type of "RETURN_NULLABLE" and the full error message is: "returning @Nullable expression from method with @NonNull return type".
The line with the error is: "		return (elements != null) ? new ConfigurationPropertyName(elements) : null;".

The error is within "the method: of(java.lang.CharSequence,boolean)" and the code surrounding the error is:
```java
	 * Return a {@link ConfigurationPropertyName} for the specified string or {@code null}
	 * if the name is not valid.
	 * @param name the source name
	 * @return a {@link ConfigurationPropertyName} instance
	 * @since 2.3.1
	 */
	public static ConfigurationPropertyName ofIfValid(CharSequence name) {
		return of(name, true);
	}

	/**
	 * Return a {@link ConfigurationPropertyName} for the specified string.
	 * @param name the source name
	 * @param returnNullIfInvalid if null should be returned if the name is not valid
	 * @return a {@link ConfigurationPropertyName} instance
	 * @throws InvalidConfigurationPropertyNameException if the name is not valid and
	 * {@code returnNullIfInvalid} is {@code false}
	 */
	static ConfigurationPropertyName of(CharSequence name, boolean returnNullIfInvalid) {
		Elements elements = elementsOf(name, returnNullIfInvalid);
		return (elements != null) ? new ConfigurationPropertyName(elements) : null;
	}

	@Nullable
	private static Elements probablySingleElementOf(CharSequence name) {
		return elementsOf(name, false, 1);
	}

	@Nullable
	private static Elements elementsOf(CharSequence name, boolean returnNullIfInvalid) {
		return elementsOf(name, returnNullIfInvalid, ElementsParser.DEFAULT_CAPACITY);
	}

	@Nullable
	private static Elements elementsOf(CharSequence name, boolean returnNullIfInvalid, int parserCapacity) {
		if (name == null) {
			Assert.isTrue(returnNullIfInvalid, "Name must not be null");
			return null;
		}
		if (name.length() == 0) {
```

Give me the fixed code snippet (ONLY THE METHOD REWRITE OF "of(java.lang.CharSequence,boolean)") in XML format in <response> tag like the example below. I will apply the fix to my codebase.
Do not import any additional libraries or classes or java comments.
If you can provide the fixed code snippet, provide it in the following format and place the code snippet in the <code> tag within ```java block.
<response>
  <success>true</success>
  <code><![CDATA[
  ```java
  Your fixed code snippet here
  ```
    ]]>
  </code>
</response>

---ChatGPT.sendRequestToOpenAI---
Sending request to OpenAI...
---ChatGPT.sendRequestToOpenAI---
Response received from OpenAI.
---Response.<init>---
Creating Response:
```xml
<response>
  <success>true</success>
  <code><![CDATA[
  ```java
  static ConfigurationPropertyName of(CharSequence name, boolean returnNullIfInvalid) {
      Elements elements = elementsOf(name, returnNullIfInvalid);
      if (elements != null) {
          return new ConfigurationPropertyName(elements);
      } else if (returnNullIfInvalid) {
          return null;
      } else {
          throw new InvalidConfigurationPropertyNameException("Invalid configuration property name");
      }
  }
  ```
    ]]>
  </code>
</response>
```
---Response.<init>---
Response created:
static ConfigurationPropertyName of(CharSequence name, boolean returnNullIfInvalid) {
      Elements elements = elementsOf(name, returnNullIfInvalid);
      if (elements != null) {
          return new ConfigurationPropertyName(elements);
      } else if (returnNullIfInvalid) {
          return null;
      } else {
          throw new InvalidConfigurationPropertyNameException("Invalid configuration property name");
      }
  }
