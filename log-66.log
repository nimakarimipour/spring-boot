====================
Type='METHOD_NO_INIT', message='initializer method does not guarantee @NonNull field applicationContext (line 58) is initialized along all control-flow paths (remember to check for exceptions or early returns).'
/home/nima/Developer/nullness-benchmarks/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/ServletComponentRegisteringPostProcessor.java:60
	ServletComponentRegisteringPostProcessor(Set<String> packagesToScan) {
Log:
---NullAway.lambda$resolveRemainingErrors$17---
==============================
---NullAway.lambda$resolveRemainingErrors$17---
TOP LEVEL CALL TO FIX ERROR: Type='METHOD_NO_INIT', message='initializer method does not guarantee @NonNull field applicationContext (line 58) is initialized along all control-flow paths (remember to check for exceptions or early returns).'
/home/nima/Developer/nullness-benchmarks/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/ServletComponentRegisteringPostProcessor.java:60
	ServletComponentRegisteringPostProcessor(Set<String> packagesToScan) {
---ChatGPT.ask---
Asking ChatGPT:
I want to resolve a warning reported by NullAway.
The error is of the type of "METHOD_NO_INIT" and the full error message is: "initializer method does not guarantee @NonNull field applicationContext (line 58) is initialized along all control-flow paths (remember to check for exceptions or early returns).".
The line with the error is: "	ServletComponentRegisteringPostProcessor(Set<String> packagesToScan) {".

The error is within "the method: ServletComponentRegisteringPostProcessor(java.util.Set)" and the code surrounding the error is:
```java
 * @author Andy Wilkinson
 * @see ServletComponentScan
 * @see ServletComponentScanRegistrar
 */
class ServletComponentRegisteringPostProcessor implements BeanFactoryPostProcessor, ApplicationContextAware {

	private static final List<ServletComponentHandler> HANDLERS;

	static {
		List<ServletComponentHandler> servletComponentHandlers = new ArrayList<>();
		servletComponentHandlers.add(new WebServletHandler());
		servletComponentHandlers.add(new WebFilterHandler());
		servletComponentHandlers.add(new WebListenerHandler());
		HANDLERS = Collections.unmodifiableList(servletComponentHandlers);
	}

	private final Set<String> packagesToScan;

	private ApplicationContext applicationContext;

	ServletComponentRegisteringPostProcessor(Set<String> packagesToScan) {
		this.packagesToScan = packagesToScan;
	}

	@Override
	public void postProcessBeanFactory(ConfigurableListableBeanFactory beanFactory) throws BeansException {
		if (isRunningInEmbeddedWebServer()) {
			ClassPathScanningCandidateComponentProvider componentProvider = createComponentProvider();
			for (String packageToScan : this.packagesToScan) {
				scanPackage(componentProvider, packageToScan);
			}
		}
	}

	private void scanPackage(ClassPathScanningCandidateComponentProvider componentProvider, String packageToScan) {
		for (BeanDefinition candidate : componentProvider.findCandidateComponents(packageToScan)) {
			if (candidate instanceof AnnotatedBeanDefinition annotatedBeanDefinition) {
				for (ServletComponentHandler handler : HANDLERS) {
					handler.handle(annotatedBeanDefinition, (BeanDefinitionRegistry) this.applicationContext);
				}
```

Give me the fixed code snippet (ONLY THE METHOD REWRITE OF "ServletComponentRegisteringPostProcessor(java.util.Set)") in XML format in <response> tag like the example below. I will apply the fix to my codebase.
Do not import any additional libraries or classes or java comments.
If you can provide the fixed code snippet, provide it in the following format and place the code snippet in the <code> tag within ```java block.
<response>
  <success>true</success>
  <code><![CDATA[
  ```java
  Your fixed code snippet here
  ```
    ]]>
  </code>
</response>

---ChatGPT.sendRequestToOpenAI---
Sending request to OpenAI...
---ChatGPT.sendRequestToOpenAI---
Response received from OpenAI.
---Response.<init>---
Creating Response:
```xml
<response>
  <success>true</success>
  <code><![CDATA[
  ```java
  ServletComponentRegisteringPostProcessor(Set<String> packagesToScan) {
      this.packagesToScan = packagesToScan;
      if (packagesToScan == null) {
          throw new IllegalArgumentException("packagesToScan cannot be null");
      }
  }
  ```
    ]]>
  </code>
</response>
```
---Response.<init>---
Response created:
ServletComponentRegisteringPostProcessor(Set<String> packagesToScan) {
      this.packagesToScan = packagesToScan;
      if (packagesToScan == null) {
          throw new IllegalArgumentException("packagesToScan cannot be null");
      }
  }
