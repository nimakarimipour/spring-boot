====================
Type='DEREFERENCE_NULLABLE', message='dereferenced expression system is @Nullable'
/home/nima/Developer/nullness-benchmarks/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/logging/LoggingApplicationListener.java:419
				system.setLogLevel(name, level);
Log:
---NullAway.lambda$resolveRemainingErrors$17---
==============================
---NullAway.lambda$resolveRemainingErrors$17---
TOP LEVEL CALL TO FIX ERROR: Type='DEREFERENCE_NULLABLE', message='dereferenced expression system is @Nullable'
/home/nima/Developer/nullness-benchmarks/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/logging/LoggingApplicationListener.java:419
				system.setLogLevel(name, level);
---ChatGPT.ask---
Asking ChatGPT:
I want to resolve a warning reported by NullAway.
The error is of the type of "DEREFERENCE_NULLABLE" and the full error message is: "dereferenced expression system is @Nullable".
The line with the error is: "				system.setLogLevel(name, level);".

The error is within "the method: getLogLevelConfigurer(org.springframework.boot.logging.LoggingSystem)" and the code surrounding the error is:
```java
		Binder binder = Binder.get(environment);
		Map<String, LogLevel> levels = binder.bind(LOGGING_LEVEL, STRING_LOGLEVEL_MAP).orElseGet(Collections::emptyMap);
		levels.forEach((name, level) -> configureLogLevel(name, level, customizer));
	}

	private void configureLogLevel(String name, LogLevel level, BiConsumer<String, LogLevel> configurer) {
		if (this.loggerGroups != null) {
			LoggerGroup group = this.loggerGroups.get(name);
			if (group != null && group.hasMembers()) {
				group.configureLogLevel(level, configurer);
				return;
			}
		}
		configurer.accept(name, level);
	}

	private BiConsumer<String, LogLevel> getLogLevelConfigurer(@Nullable LoggingSystem system) {
		return (name, level) -> {
			try {
				name = name.equalsIgnoreCase(LoggingSystem.ROOT_LOGGER_NAME) ? null : name;
				system.setLogLevel(name, level);
			}
			catch (RuntimeException ex) {
				this.logger.error(LogMessage.format("Cannot set level '%s' for '%s'", level, name));
			}
		};
	}

	private void registerShutdownHookIfNecessary(Environment environment, @Nullable LoggingSystem loggingSystem) {
		if (environment.getProperty(REGISTER_SHUTDOWN_HOOK_PROPERTY, Boolean.class, true)) {
			Runnable shutdownHandler = loggingSystem.getShutdownHandler();
			if (shutdownHandler != null && shutdownHookRegistered.compareAndSet(false, true)) {
				registerShutdownHook(shutdownHandler);
			}
		}
	}

	void registerShutdownHook(Runnable shutdownHandler) {
		SpringApplication.getShutdownHandlers().add(shutdownHandler);
	}
```

Give me the fixed code snippet (ONLY THE METHOD REWRITE OF "getLogLevelConfigurer(org.springframework.boot.logging.LoggingSystem)") in XML format in <response> tag like the example below. I will apply the fix to my codebase.
Do not import any additional libraries or classes or java comments.
If you can provide the fixed code snippet, provide it in the following format and place the code snippet in the <code> tag within ```java block.
<response>
  <success>true</success>
  <code><![CDATA[
  ```java
  Your fixed code snippet here
  ```
    ]]>
  </code>
</response>

---ChatGPT.sendRequestToOpenAI---
Sending request to OpenAI...
---ChatGPT.sendRequestToOpenAI---
Response received from OpenAI.
---Response.<init>---
Creating Response:
<response>
  <success>true</success>
  <code><![CDATA[
  ```java
  private BiConsumer<String, LogLevel> getLogLevelConfigurer(LoggingSystem system) {
      return (name, level) -> {
          if (system != null) {
              try {
                  name = name.equalsIgnoreCase(LoggingSystem.ROOT_LOGGER_NAME) ? null : name;
                  system.setLogLevel(name, level);
              } catch (RuntimeException ex) {
                  this.logger.error(LogMessage.format("Cannot set level '%s' for '%s'", level, name));
              }
          }
      };
  }
  ```
    ]]>
  </code>
</response>
---Response.<init>---
Response created:
private BiConsumer<String, LogLevel> getLogLevelConfigurer(LoggingSystem system) {
      return (name, level) -> {
          if (system != null) {
              try {
                  name = name.equalsIgnoreCase(LoggingSystem.ROOT_LOGGER_NAME) ? null : name;
                  system.setLogLevel(name, level);
              } catch (RuntimeException ex) {
                  this.logger.error(LogMessage.format("Cannot set level '%s' for '%s'", level, name));
              }
          }
      };
  }
